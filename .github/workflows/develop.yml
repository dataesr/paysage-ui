name: Develop deployment

on:
  push:
    branches:
      - develop

env:
  # Must match k8s deployment name
  DEPLOYMENT: paysage-ui
  DEPLOYMENT_NAMESPACE: paysage-develop
  DEPLOYMENT_URL: https://paysage.staging.dataesr.ovh
  SLACK_NOTIFICATION_CHANNEL: '#paysage-bot'

jobs:
  publish-ghcr:
    name: Publish docker image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Log into registry
        run: docker login ghcr.io -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }}

      - name: Build image
        run: docker build -f Dockerfile -t ${{ github.repository }} --build-arg MODE=staging .

      - name: Get Tag
        id: version
        run: echo ::set-output name=tag::${GITHUB_REF#refs/heads/}

      - name: Push image
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository }}
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          docker tag ${{ github.repository }} $IMAGE_ID:${{ steps.version.outputs.tag }}
          docker push $IMAGE_ID:${{ steps.version.outputs.tag }}

  deploy:
    name: Update staging deployment
    runs-on: ubuntu-latest
    needs: publish-ghcr
    steps:
      - name: Check Out Repo
        uses: actions/checkout@v2

      - name: Deploy to Cluster
        id: kubectl-deploy
        uses: dataesr/kubectl-deploy@v1.1
        env:
          KUBE_CONFIG: ${{ secrets.KUBE_CONFIG_DOAD_STAGING }}
        with:
          namespace: ${{ env.DEPLOYMENT_NAMESPACE }}
          restart: ${{ env.DEPLOYMENT }}

  notify:
    needs: deploy
    if: always()
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: dataesr/slack-notifier-action@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          slack_token: ${{ secrets.SLACK_TOKEN }}
          slack_channel: ${{ env.SLACK_NOTIFICATION_CHANNEL}}
          deployment_url: ${{ env.DEPLOYMENT_URL }}
      - name: Create the Mattermost Message
        run: |
          echo "{\"text\":\"${{ github.actor }} ${{ github.event_name }} sur la branche ${{ github.ref_name }} de <${{ github.server_url }}/${{ github.repository }}|${{ github.repository }}>\n<${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|${{ github.workflow }} (#${{ github.run_number }})>, terminÃ© avec le status ${{ github.action_status }}\"}" > mattermost.json
      - uses: mattermost/action-mattermost-notify@master
        env:
          MATTERMOST_CHANNEL: 'paysage-bot'
          MATTERMOST_USERNAME: 'mattermost-bot'
          MATTERMOST_WEBHOOK_URL: ${{ secrets.MATTERMOST_WEBHOOK_URL }}